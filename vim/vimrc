" symlink ~/.vimrc to the path of this file

if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')

Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' } " Fuzzy file searching
Plug 'junegunn/fzf.vim' " Grepping
Plug 'skwp/vim-spec-finder' " Specfile finding
Plug 'scrooloose/nerdtree' " Filetree explorer
Plug 'tpope/vim-fugitive' " Git blame
Plug 'tpope/vim-surround' " Easy quotes/parenthesizing
Plug 'tomtom/tcomment_vim' " Comment toggling
Plug 'AndrewRadev/splitjoin.vim' " Quick toggling of single- and multi- line blocks

call plug#end()
" ============================================================================
set number                          " Show line numbers
set nowrap                          " Do not wrap lines
set noswapfile                      " Disable creation of *.swp files
set tabstop=2                       " Two-space tabs
set shiftwidth=2                    " Number of spaces to use in each autoindent step
set softtabstop=2
set smarttab                        " Use shiftwidth and softtabstop to insert or delete (on <BS>) blanks
set expandtab
set autoindent                      " Keep the indent when creating a new line
set smartindent
set smarttab
set incsearch                       " Find the next match as we type the search
set hlsearch                        " Highlight searches by default
set ignorecase                      " Ignore case when searching...
set smartcase                       " ...unless we type a capital
set guifont=Menlo\ Regular:h18

let mapleader=","

colorscheme jellybeans
" ============================================================================
" Window navigation can be done with just Ctrl+direction(h,j,k,l)
nnoremap <silent> <C-h> <C-w>h
nnoremap <silent> <C-l> <C-w>l
nnoremap <silent> <C-k> <C-w>k
nnoremap <silent> <C-j> <C-w>j

" `vv` for vertical split, `ss` for horizontal split
nnoremap <silent> vv <C-w>v
nnoremap <silent> ss <C-w>s

" Fuzzy file search via <Leader>t; search in buffers via <Leader>b
nnoremap <silent> <Leader>t :FZF<cr>
nnoremap <silent> <Leader>b :Buffers<cr>

" <Leader>ws removes trailing whitespace
nnoremap <silent> <Leader>ws :let _s=@/ <Bar> :%s/\s\+$//e <Bar> :let @/=_s <Bar> :nohl <Bar> :unlet _s <CR>

" `sj` to toggle single-line block -> multi-line block, `sk` to toggle multi-line -> single line
nmap sj :SplitjoinSplit<cr>
nmap sk :SplitjoinJoin<cr>

" Term search via <Leader>gg
map <silent> <Leader>gg :Ag<cr>

" Shift+k to search for the worder under the cursor
nnoremap <silent> K :Ag <C-R><C-W><CR>

" clear highlighting via //
map <silent> // :nohlsearch<CR>

map ,jm :FZF app/models<CR>
map ,jc :FZF app/controllers<CR>
map ,jv :FZF app/views<CR>

" copy current filename (cf: fullpath, cr: relative path, cn: filename) into system clipboard
nnoremap <silent> ,cf :let @* = expand("%:~")<CR>
nnoremap <silent> ,cr :let @* = expand("%")<CR>
nnoremap <silent> ,cn :let @* = expand("%:t")<CR>

" Use numbers to pick the tab you want (like iTerm)
map <silent> <D-1> :tabn 1<cr>
map <silent> <D-2> :tabn 2<cr>
map <silent> <D-3> :tabn 3<cr>
map <silent> <D-4> :tabn 4<cr>
map <silent> <D-5> :tabn 5<cr>
map <silent> <D-6> :tabn 6<cr>
map <silent> <D-7> :tabn 7<cr>
map <silent> <D-8> :tabn 8<cr>
map <silent> <D-9> :tabn 9<cr>

command! Q :q
command! W :w
" ============================================================================
" Make nerdtree look nice
let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1
let g:NERDTreeWinSize = 30

" Opens NERDTree, expose current file with Ctrl + \ (backslash)
" calls NERDTreeFind if
"   + NERDTree is active,
"   + current window contains a modifiable file
"   + we're not in vimdiff

function! OpenNerdTree()
  if &modifiable && strlen(expand('%')) > 0 && !&diff
    NERDTreeFind
  else
    NERDTreeToggle
  endif
endfunction
nnoremap <silent> <C-\> :call OpenNerdTree()<CR>
" ============================================================================
